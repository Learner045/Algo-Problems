class Solution {
    public int size(ListNode head2){
        int c=0;
        while(head2!=null){
            head2=head2.next;
            c++;
        }
        return c;
    }
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
       if(n==1)
       {
           if(head.next==null)return null;
       }
        if(n==size(head)){
            return head.next;
        }
        
        ListNode fast=head;
        ListNode slow=head;
        int count=n;
        try{
        while(count>0){
            fast=fast.next;
            count--;
        }
        while(fast.next!=null){
            
            slow=slow.next;
            fast=fast.next;
            
        }
        slow.next=slow.next.next;
        return head;
        }catch(Exception e){
            return null;
        }
        
    }
}